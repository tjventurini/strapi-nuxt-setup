version: "3"

networks:
  frontend:
    name: reverse-proxy
    external: true
    driver: ${NETWORKS_DRIVER}
  backend:
    name: Strapi
    driver: ${NETWORKS_DRIVER}

services:
  strapi:
    container_name: strapi
    # user: ${UID}:${GID}
    build:
      context: ./strapi
      dockerfile: ../docker/strapi/local/Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapidb
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
      HOST: ${STRAPI_HOST}
      PORT: ${STRAPI_PORT}
    volumes:
      - ./strapi:/opt/app
    command: ./entrypoint.local.sh
    labels:
      # enable traefik
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy"
      # http
      - "traefik.http.routers.strapi.rule=Host(`admin.${DOMAIN}`)"
      - "traefik.http.routers.strapi.entrypoints=web"
    networks:
      - frontend
      - backend
    depends_on:
      - strapidb
  
  nuxt:
    container_name: nuxt
    user: ${UID}:${GID}
    build:
      context: ./nuxt
      dockerfile: ../docker/nuxt/Dockerfile
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./nuxt:/app
    command: ./entrypoint.local.sh
    labels:
      # enable traefik
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy"
      # http
      - "traefik.http.routers.nuxt.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.nuxt.entrypoints=web"
    networks:
      - frontend
    depends_on:
      - strapi

  strapidb:
    container_name: strapidb
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - backend

volumes:
  strapi-data:
